<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="circularProgressBarr.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>