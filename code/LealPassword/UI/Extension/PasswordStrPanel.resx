<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gaugeGraph.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAADICAYAAABS39xVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAA2ISURBVHhe7d0xiB3HHcdxlylVurO7qAouXahQKVKpi0oX
        LkwqlQKJN0MIHCaFiIsoBIECjk6yhDlkG59iGc4hBHUWKYQKF8KNXaRQEbAxRkn+v/B/8WU9d3rv3duZ
        /+x+P/DrEm7uovlld3Z29iUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwFrevnLlp7spXVzm3ZR+mVI6W8hp/68AwHbcTOnN24vFzvspffZhzl/u
        5/xsmT/n/N3fcv73cfnUklfP15aDQ9mzYsuWCyo5HxKAOftjSj/T1dCdxWJvL+eHKiMrmu9LBbRu1iys
        VbIstatWYpdUZJZX/VcBMCV2xXTmvZSuL6+WSiWz7Rwqm7Hz0KKrsouW1/xXBtCLZUF9kPMX27pqWjeD
        UqmZZ5ZbVl5vWVgzA6LR7Z0V1Dv3cn78YIU1phr5tWVQJK2i28llgXEbCdR2I6VT0QpqmLctg+KIkqcW
        +xOmNyyn/E8KYNv09E4l9Zec/1UqiUj5jWVQFFGjq6/z/icGcBJaj9L2glZrUZvmt5ZCOUSObh2vWXmx
        cA+s4/rly69o0bzWE70x0mFhHc4TKy5tn2DNCzjKbkpXtPXgrzZpSiXQU35vKRRBj9m34tJ610/8fyZg
        vnQ1pVu+g5yflyZ+r/mDpTD5e863Fi3Wc9WF+dFWBBVVDwvom+S6ZTDhpxSKC/OgorqX8+dTuO07Lu9a
        ChN9atETRhbpMT162qctCVMvqmVmUljL6NUgigv9U1HpFZnSpJ5y7loKE3vqObDi4oQJ9OdPi8UvPsr5
        q9JknkNmWljLUFzog5766davNInnlD1LYSLPLdoSwQvYiOlOSrtTfeq3buzqsjSB5xhth9ix4mIfF2LQ
        7d/9nP9ZmrhzzceWwcSde7620jrn/2SA+vz27/PShJ17Rjh1dCrRbSJ7uFCX3vWb2u70bYbCOjbfWmnp
        3HpuEzGumyn9vOeXkmtF+80KE5X8f55ym4hR6NA8fayhNDlJOYUJSsrRbeLL/k8NOBldVX2S8zelSUmO
        zq8shclJynnG1RZOTEcRs1VhswQ+JjlydvyfHrA63QKyAfRkobA2zkNuEbEybgG3k85PHW0dbhHxYtwC
        bi8U1lbCLSJ+jFvA7ed3lsIEJOuHW0T8gFvAk0df9dH+tMO5lvPfbbIdeB755CObhVtEcAt4XLSTX8Wj
        14/upnR/N6WLigre/3wnoqsGy1nPRZuUOxaVmz52Wpq0hFvE+dLrNaWJOrfoxW19rUdnzKvAVUr+J2rK
        Sux1y3mLzdN8w6IyK03iueWG/4kwF5qcpck7h+j2V1dNtxeLHa3d+Z+kG35FZvN21gWm3fG8izgHczth
        4UHO3y0LSidM+J9hEjRpLedsAut28uGhCT2H6GTT7v4PByvS1cRczlf/OOd/6JZXX+nxX38WvMDO22TW
        LaQOzytN9CnlEaU1QSorTeLS5J5KdCWlxfG5ldRRvLzesEm9P5jkU4tOfeCMranQbdBUTwTVkzztH9Op
        p/7rosAmtJ5IXrLJ/WQw2acSnWjKp8Z6p6uNKe6x0lM9PdHzXxNr0MS2CX5Nk/zQhJ9CtFfrdf810Zub
        KZ3RhsbShO8xOhRPi+fc8m2PTXDdMk5p35dOM2WDaW+mVFba2KptGBTVeLy4prIbn9LqiSb2FMpqWVRT
        24oQmU10PWGcQnGptPiYa3Sa3L2vWWkh/c5isdfjps6p8OLqfWOq1rRYiI9KE7znp4G6oqKoYtGtlU38
        nte49PSQLQ/R9L7PShtaWaOKySa89nPZ3O92I6r2aXE8TSS97mDXZs8oLxvjeDbpT9vk73UTKjvio+jx
        3UDd/mlXuv8K6IhNfK1v9biHS+8e8sJ0Sz2euvBRzl9x+9c3TXwrAL1w3dtt4p7/CqjtTkq7pUKIGr/9
        u+LDxwT4bWJvTxM5T6s2vZZSKoWo0RobT/+my4rLeqBYDiGj8frQMTYd0avXVErFEC0ap4558aFjwqwE
        zloZdLO2ZeM970PHWHSVolurUjlEi8a5rfPP0QcrgZetDHq5RdTGUvZojamX7QvcAs6bbrkG5RA1+oQY
        Tw7HoFurUjlECreAWLIi6OUW8aoPGdvSw7qVXrjmFhCH9XKLaONkPWtbeli30gvXOtLGhwz8j265rBRu
        DUsiWFjP2pbo61Z64ZojYPAiVgo65bRUFlHCetZJRV+30gvXLK5jVVYI1gvFsogS1rM2FX3dSld+PlRg
        ZVZaOt20VBYhYuNjPWtd0det9uzy2YcKrE2lYOUQ9T1E1rPWFfkEBk5ZwDZYKehwwGeDsoiSAx8mXkTf
        2CsVRYSwxwrbZKWlT46FLC0b2wUfJo4T9ZhjrqwwBisGbTCNeHuo45V5oHScqE8FWbPCmPz2sFQarcNT
        w6PoULuDnJ+XCqNleBqIGqy0Qj49tHHx5Z2Sezk/LhVGy2iflQ8PGJ2Vw6VSaTQOdxdDERfatZbGplDU
        ZgVxdVAYzWNF+pYPDxLt46caD6/boBUriRvD0mgcLcDzqTDRx0NLpdEqfuoCLzKjGSsHvTAd7ZNi13x4
        86WFdn3yqlQcLaJXgTgiBhFYaZ2ykgj11Wkb0+s+vHmKdhIDG0MRiQrCiiLSHq1HPrT5ibbQzvYFRGSl
        dbFQHM2i8fjQ5kUfFC0VR4voRWueCCIqK4q9YXE0jBbg53VuVqSrK9atEJ0VRKj1LBvPvI6giXR1xboV
        emAlEWk9az5rWZGurli3Qk+stKwrigVSPbO5yoryZJB1K/TIyuJgWB6NMv2rLO27inLs8e5cn3aga3Zl
        o0+Hhbg1nPxVVpSTRD/M+UsfEtAdK4ooWx2me5UV5epKO+s1Fh8W0B0rLL2682hQHk1iYznnw5qWKFdX
        enfRhwR0y4pCJ5UWS6Rypjefolxd6RQGHxLQPSuLEKc6WHlO65C/KFdXN1N604cEdM+KQgvwET5iMZ2r
        LG0diHAig0409SEBk2GlFWIB3sYxjW8Z3l4sdkoFUjMHOT9noR1TZYXRfAHeCiv7cPoW4TUcFtoxZVpD
        KpVI5Tz14fQrwmK7rq7Y0Y6ps8JofqKDFedZH06fIhx/zNUV5iDIVdYNH06fWn/FmasrzIkVRuv3DJ9Z
        cfZ5VpbOmCqVSM1wdYU5sbI4XyiRqrExXPDh9EWfdy+VSK1wdYU5stJo/cRw34fSFxVGqUhqhasrzFGQ
        q6y+vmG4m9KVUonUip5Msu8Kc2Wl0fQqywrrkg+lD60P6dOrQD4UYHYCXGX1c+yM1o1a7r3i6goIcZXV
        xwvR+qhDqUhqhXPagf9eZV0qFUnF7PhQYmt9O6j1Mx8KMFta+C6USM30cVv4ac7fl4qkRvRk0ocBzJ6V
        xv6gRKrGSjP2tqKbKZ0pFUmtaO+XDwWYPSuMC6UiqRX7+bE/UtF6/YovOAM/sMLQ2e8tD/i76kOJqeX6
        ld5b9GEAcFYa1wYlUjOx17Farl+xsx34MbvKavqxirDrWC0/Qc/eK+BoVhxPh0VSK1ZYb/gwYml59pVO
        NfVhABiw0rDuKBdKhcQ8I6vlUcjvpfSODwPAgBXWq4UiqZWYRye3/DLO9cuXX/FhAChQcQyKpFpUmD6M
        GFquX/F0EHgxK45mTwvDrWO1XL96P6XPfBgAjmCl0fIEh1jrWC3Xr3ZTuujDAHAEK6xThSKplSc+jBge
        5PxdqUzGjrYzcAwysBorjmZHzlhhxvk4RalMamQ/52c+BAAvYMVxdVgktWKFFeN8rJZfx2H9Clhdy3Us
        +9kxvqZze7HYKZVJjbB+Bayu5TqW/ewY57zfTel+qUzGDutXwPqsPFqtY93yIbR1L+fHpUIZO+y/AtZn
        xdFqHSvGyQ2tPkevovQhAFiR3Zq9VSiTGonxgKzVKzkcJwOszwrrXKFMqsR+dtsPrOodvlKZ1IgW+30Y
        AFak0iiVSY2oLH0YbdxM6c1SmdQIxyEDm7Hy+HZYJjWi21EfQht3UtotlcnY0RNCHwKANVl5tHpS2PaM
        d32lplQoY0evAvkQAKzJiuPWoEhqZd+H0Earl545YRTYnN2aWXcUC2XstD3MT+/ylQpl7PD9QWBzVljN
        vlfoQ2ij1SkNWjvzIQBYkxXWa6UyqREfQhutPuulp5M+BABrssJq+U5hu9fpDnJ+XiqUsWOFdcaHAGAD
        Vh5NvghthdXufPdSmdQI3yAETsbKo8lHKWZZWP7jAWzIyuPJsExqxArrrA+hLl3llMqkRnwIADZk5XEw
        LJMaaVZYWkcqlcnY0UK/DwHAhqw8WhVWm/cJKSygX1YeTXa7W2G1+UahjicuFcrY+STnb3wIADZk5XFj
        WCY1MrvC4ks5wMlZeTT5ErQVVpuz3Vt9fILCAk7OisP6o1wqY0Y/14dQ13spXS8Vytj5IOcvfAgANjS7
        wirRoXq6VTwcHWWs7wcejq6SDkfrUqVyKoXCAk7OimOds921Z0tPFQ/nqspnkLODxPh4ag3a5/Wj8ktp
        l6ORgZNTmVguHSqXZU77fwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACYiZde+g9xBv2euDVnNwAAAABJRU5ErkJggg==
</value>
  </data>
</root>